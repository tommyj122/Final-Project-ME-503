function data = initializeData(cameraImage, dock)
% Initialize state variables and data structures for the Autonomy.m function.

% Debugging and Logging
data.debug = struct('mode', false); % Debug mode flag

% State Flags
data.state = struct('previous', 'safeMode', 'current', 'NavigationChannel');

% Sensor Info
data.GPS = struct('CEP', 0.120); % Circular Error Probable from GPS reading
data.LiDAR = struct('mode', 'NED');

% Waypoint and Navigation Data
data.navigation = struct(...
    'waypoint', [], ...                      % Waypoints array
    'currentWaypointIdx', 1, ...             % Index of current waypoint
    'eTheta', [0 0], ...                     % Error in theta (yaw error)
    'h_polygon', false, ...                  % Handle for polygon plot (if used)
    'currentPoint', struct('XData', [], 'YData', []), ... % Struct for current point data
    'CEP', struct('XData', [], 'YData', []));         % Struct for CEP data

% Actuator Status and Control
data.actuator = struct('fthrust', 0.4, 'turnAmount', 0.5);

% Collision Avoidance
DetectionGrid_sensor = [0, 0; 0.2, 0.55; 1, 0.55; 1, -0.55; 0.2, -0.55; 0, 0];
data.collisionAvoidance = struct(...
    'on', true, ...
    'activelyAvoiding', false, ...
    'safeDistance', 0.35, ...
    'turnDirection', '', ...
    'DetectionGrid_FRD', DetectionGrid_sensor + [0.27, 0]);

% Navigation Channel
load('NavChannelYOLO', 'detector', 'info'); % Large buoy detector
data.navChannel = struct(...
    'detector', detector, ...
    'info', info, ...
    'status', 'SEARCHING_GATE_1', ...
    'gate1Waypoint', [], ...
    'gate2Waypoint', []);

% Obstacle Channel
data.obstChannel = struct(...
    'status', 'SEARCHING', ...
    'currentGate', 1, ...
    'gateWaypoints', cell(1, 15));

% Obstacle Field
data.obstField = struct(...
    'currentState', 'SEARCHING_ENTRY', ...
    'centralBuoyCircumnavigated', false, ...
    'obstacleFieldEntered', false, ...
    'openingLocation', [], ...
    'whiteBuoyLocation', [], ...
    'exitLocation', []);

% Docking
data.docking = struct(...
    'currentState', 'SEARCHING_DOCK', ...
    'activeDockColor', dock, ...
    'docked', false);

% Speed Gate
data.speedGate = struct(...
    'currentState', 'SEARCHING_GATE_ENTRY', ...
    'timerStarted', false, ...
    'markBuoyCircumnavigated', false);

% Return to Home
data.returnHome = struct(...
    'currentState', 'NAVIGATING_HOME', ...
    'distanceTraveled', 0, ...
    'startLocation', [0, 0], ...
    'completionThreshold', 2);

end
